{"remainingRequest":"D:\\project\\my-sme\\my-app\\node_modules\\eslint-loader\\index.js??ref--0-1!D:\\project\\my-sme\\my-app\\src\\views\\bet\\components\\betNav.js","dependencies":[{"path":"D:\\project\\my-sme\\my-app\\src\\views\\bet\\components\\betNav.js","mtime":1542297917998},{"path":"D:\\project\\my-sme\\my-app\\node_modules\\babel-loader\\lib\\index.js","mtime":1503096278000},{"path":"D:\\project\\my-sme\\my-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1539356125690},{"path":"D:\\project\\my-sme\\my-app\\node_modules\\eslint-loader\\index.js","mtime":1499322156000}],"contextDependencies":[],"result":["import React,{Component}from 'react'\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\nimport api from '../../../api/bet/index'\nimport http from '../../../api/axios'\nimport { getTabLottery } from '../bet.redux'\nimport {connect} from 'react-redux'\n\n\n@connect(\n    state=>state.TabNav,\n    { getTabLottery }\n)\nexport default class BetNav extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            active:0,\n        }\n    }\n    componentWillMount(){\n        this.getNavList();\n        // this.getPlayData();\n        this.props.getTabLottery(\"genius\")\n    }\n    async getNavList(){/*get play dataList*/\n        await http.get(api.navLottery).then((res) => {\n            this.setState({\n                navList: res.data.data\n            })\n        })\n    }\n    tabLottery(index){\n        this.setState({\n            active:index,\n            loading:true\n        });\n    }\n    /*async getPlayData(){/!*get play dataList*!/\n\n\n    }*/\n    getPlayList(idx){\n        this.setState({\n            active:idx,\n            loading:true,\n            choosedNavIdx:idx\n        });\n        console.log(idx)\n        console.log(\"choosedNavIdx:\"+this.state.choosedNavIdx)\n    };\n\n    openTrend(){\n        const w=window.open('about:blank');\n        w.location.href='../trend'\n    }\n    render(){\n        let _this = this;\n        return(\n           <div>\n               <div className='betNav'>\n                   <ul>\n                       {_this.state.navList && _this.state.navList.map((item,index)=>{\n                           return(\n                               <li key={index}\n                                   className={this.state.active ===index ? 'active' : null}\n                                   onClick={()=>{this.tabLottery(index)}}\n                               >{item.title}</li>\n                           )\n                       })}\n                   </ul>\n               </div>\n               <div className='betHeader'>\n                   <div className='left'>\n                       <div className=\"no\">\n                           <h3>重庆时时彩</h3>\n                           <p><em>1254455</em>期</p>\n                       </div>\n                       <div className=\"cutdown\"></div>\n                   </div>\n                   <div className='mid'>\n                       <div className=\"midL\">\n                           <p>第2342343544期</p>\n                           <p>开奖结果</p>\n                       </div>\n                       <div className=\"winNum\" >\n                           <span>1</span>\n                           <span>1</span>\n                           <span>1</span>\n                           <span>1</span>\n                           <span>1</span>\n                       </div>\n                   </div>\n\n                   <div className='right'>\n                       {/*<button onClick={()=>{this.openTrend()}}>*/}\n\n                           {/*号码走势*/}\n\n                           {/*/!*<icon class=\"zs-icon\" name=\"iconZS\"></icon>*!/*/}\n\n                       {/*</button>*/}\n                       <Router >\n                           <div>\n                               {/*<button>*/}\n                                   <Link to={`/trend`} className=\"h4\" target=\"_blank\" replace> 号码走势</Link>\n\n                               {/*</button>*/}\n                           </div>\n\n                       </Router>\n                   </div>\n               </div>\n               <div className='betMain'>\n                   <div className='sscMain'>\n                       <div className=\"headtype\">\n                           <ul className=\"typelist\">\n                               {/* {_this.state.dataList && _this.state.dataList.map((item,idx) =>{\n                            return (\n                                <li\n                                    key={idx}\n                                    className={this.state.active ===idx ? 'active' : null}\n                                    onClick={()=>{this.getPlayList(idx)}}>\n                                    {item.groupName}\n                                    </li>\n                            )\n                        })}*/}\n\n                               {this.props.tabLotteryList.map((item,idx) =>{\n                                   return (\n                                       <li\n                                           key={idx}\n                                           className={this.state.active ===idx ? 'active' : null}\n                                           onClick={()=>{this.getPlayList(idx,0)}}>\n                                           {item.groupName}\n                                       </li>\n                                   )\n                               })}\n\n                           </ul>\n                       </div>\n                       <div className=\"playrealcon\">\n\n                           <div className=\"secondNav\">\n                               <div className=\"secondNavL\">\n                                   <div >\n                                       <span>{this.props.tabLotteryList[this.choosedNavIdx]}</span>\n                                       <h4>\n                                           {/* {this.props.tabLotteryList[this.choosedNavIdx].childList.map((item,idx)=>{\n                                        return(\n                                            <em\n                                                className={this.state.active ===idx ? 'active' : null}\n                                                // onClick={()=>{this.getPlayList(choosedNavIdx,idx)}}\n                                            >{item.name}</em>\n                                        )\n                                    })}*/}\n\n                                       </h4>\n                                   </div>\n\n\n                               </div>\n                           </div>\n                       </div>\n                   </div>\n               </div>\n           </div>\n        )\n    }\n}",null]}